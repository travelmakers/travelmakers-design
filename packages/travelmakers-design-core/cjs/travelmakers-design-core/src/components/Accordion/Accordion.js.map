{"version":3,"file":"Accordion.js","sources":["../../../../../src/components/Accordion/Accordion.tsx"],"sourcesContent":["import {\n  ClassNames,\n  PolymorphicComponentProps,\n  PolymorphicRef,\n  TmComponentProps,\n} from \"@travelmakers-design/styles\";\nimport React, { Fragment, forwardRef, useState } from \"react\";\n\nimport { AccordionCheck } from \"./AccordionCheck\";\nimport { AccordionIcon } from \"./AccordionIcon\";\nimport useStyles from \"./Accordion.style\";\n\nexport type AccordionStylesNames = ClassNames<typeof useStyles>;\n\ninterface AccordionData {\n  question: string;\n  answer: string;\n}\n\ntype AccordionType = \"Default\" | \"Number\" | \"Checkbox\";\n\nexport interface AccordionBaseProps\n  extends TmComponentProps<AccordionStylesNames> {\n  /** Accordion 컴포넌트의 type을 결정합니다. */\n  type?: AccordionType;\n\n  /** Accordion 컴포넌트 주제를 입력합니다. */\n  data: AccordionData[];\n\n  /** Accordion container에 대한 style을 설정합니다. */\n  containerStyle?: React.CSSProperties;\n\n  /** Icon에 대한 style을 설정합니다. */\n  iconStyle?: React.CSSProperties;\n}\n\nexport interface _AccordionProps\n  extends AccordionBaseProps,\n    TmComponentProps<AccordionStylesNames> {\n  /** Static css selector base */\n  __staticSelector?: string;\n}\n\nexport type AccordionProps<C extends React.ElementType> =\n  PolymorphicComponentProps<C, _AccordionProps>;\n\ntype AccordionComponent = <C extends React.ElementType = \"div\">(\n  props: AccordionProps<C>\n) => React.ReactElement;\n\nexport const Accordion: AccordionComponent & { displayName?: string } =\n  forwardRef(\n    <C extends React.ElementType = \"div\">(\n      {\n        component,\n        type = \"Default\",\n        data,\n        className,\n        containerStyle,\n        iconStyle,\n        overrideStyles,\n        __staticSelector = \"div\",\n      }: AccordionProps<C>,\n      ref: PolymorphicRef<C>\n    ) => {\n      const [open, setOpen] = useState(\n        Array.from({ length: data.length }, (_, index) => false)\n      );\n      const Element: any = component || \"div\";\n\n      const { classes, cx } = useStyles(\n        { open },\n        { overrideStyles, name: \"div\" }\n      );\n\n      return (\n        <div className={cx(containerStyle)}>\n          {data?.map((AccordionData, index) => (\n            <Element\n              ref={ref}\n              key={`accordion-${index}`}\n              className={cx(classes.container, className)}\n            >\n              {/* NOTE: Title */}\n              <div\n                className={cx(classes.row)}\n                onClick={() =>\n                  setOpen((prevState) => {\n                    return prevState?.map((data, innerIndex) =>\n                      index === innerIndex ? !data : data\n                    );\n                  })\n                }\n              >\n                <div className={cx(classes.titleWrap)}>\n                  {type === \"Number\" && (\n                    <span className={cx(classes.titleIndex)}>{index + 1}.</span>\n                  )}\n                  {type === \"Checkbox\" && (\n                    <div style={{ marginRight: 8 }}>\n                      <AccordionCheck />\n                    </div>\n                  )}\n                  <span className={cx(classes.title)}>\n                    {AccordionData.question}\n                  </span>\n                </div>\n\n                <AccordionIcon\n                  className={cx(classes.icon)}\n                  style={{\n                    transform: `rotate(${open[index] ? 180 : 0}deg)`,\n                    ...iconStyle,\n                  }}\n                />\n              </div>\n\n              {/* NOTE: Content */}\n              {open[index] && (\n                <div className={cx(classes.content)}>\n                  <div className={cx(classes.divider)} />\n                  <div className={cx(classes.answerText)}>\n                    <span\n                      className={cx(classes.answer)}\n                      dangerouslySetInnerHTML={{\n                        __html: AccordionData?.answer,\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n            </Element>\n          ))}\n        </div>\n      );\n    }\n  );\n\nAccordion.displayName = \"@travelmakers-design/core/Accordion\";\n"],"names":["forwardRef","useState","useStyles","React","AccordionCheck","AccordionIcon"],"mappings":"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"}