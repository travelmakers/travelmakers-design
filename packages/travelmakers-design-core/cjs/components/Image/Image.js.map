{"version":3,"file":"Image.js","sources":["../../../src/components/Image/Image.tsx"],"sourcesContent":["import {\n  ClassNames,\n  CoRadius,\n  TmComponentProps,\n} from \"@travelmakers-design/styles\";\nimport React, {\n  CSSProperties,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { View } from \"../View\";\nimport useStyles from \"./Image.style\";\n\nlet observer = null;\nconst LOAD_IMG_EVENT_TYPE = \"loadImage\";\n\nconst onIntersection: IntersectionObserverCallback = (entries, io) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      io.unobserve(entry.target);\n      entry.target.dispatchEvent(new CustomEvent(LOAD_IMG_EVENT_TYPE));\n    }\n  });\n};\n\nexport type ImageStylesNames = ClassNames<typeof useStyles>;\n\nexport interface ImageProps\n  extends TmComponentProps<ImageStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<\"h1\">, \"placeholder\"> {\n  /** true일 경우 lazy load가 적용됩니다. */\n  lazy?: boolean;\n\n  /** lazy 속성이 true이고 Image 컴포넌트 크기 * threshold만큼 화면에 보일 경우 이미지가 로드됩니다. */\n  threshold?: number;\n\n  /** 이미지 src를 정합니다. */\n  src: string;\n\n  /** 이미지가 아직 로드되지 않은 경우 보여줄 요소를 정합니다. */\n  placeholder?: React.ReactNode;\n\n  /** Image 컴포넌트의 radius를 정합니다. */\n  radius?: CoRadius | number;\n\n  /** Image 컴포넌트의 너비를 정합니다. */\n  width?: number | string;\n\n  /** Image 컴포넌트의 높이를 정합니다. */\n  height?: number | string;\n\n  /** 이미지 설명을 추가합니다. */\n  alt?: string;\n\n  /** Image 컴포넌트와 이미지 컨텐츠의 크기를 어떻게 맞출 것인지 정합니다. */\n  fit?: \"cover\" | \"fill\" | \"contain\";\n}\n\nexport const Image = forwardRef<HTMLImageElement, ImageProps>(\n  (\n    {\n      lazy,\n      threshold = 0.5,\n      placeholder,\n      src,\n      radius,\n      width = \"100%\",\n      height = \"auto\",\n      alt,\n      fit,\n      style,\n      className,\n      co,\n      overrideStyles,\n      ...props\n    }: ImageProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles(\n      { radius },\n      { overrideStyles, name: \"Image\" }\n    );\n    const [loaded, setLoaded] = useState(false);\n    const [intersected, setIntersected] = useState(false);\n    const imgRef = useRef<HTMLImageElement>(null);\n\n    const imageStyle: CSSProperties = {\n      width,\n      height,\n      objectFit: fit, // cover, fill, contain\n    };\n\n    useImperativeHandle(ref, () => imgRef.current!);\n\n    useEffect(() => {\n      if (!lazy) {\n        setIntersected(true);\n        return;\n      }\n\n      const handleIntersect = () => setIntersected(true);\n\n      const imgElement = imgRef.current;\n      imgElement &&\n        imgElement.addEventListener(LOAD_IMG_EVENT_TYPE, handleIntersect);\n      return () => {\n        imgElement &&\n          imgElement.removeEventListener(LOAD_IMG_EVENT_TYPE, handleIntersect);\n      };\n    }, [lazy]);\n\n    useEffect(() => {\n      if (!lazy) return;\n\n      observer = new IntersectionObserver(onIntersection, { threshold });\n      imgRef.current && observer.observe(imgRef.current);\n    }, [lazy, threshold]);\n\n    return (\n      <View className={cx(classes.root, className)} co={co} {...props}>\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          className={cx(classes.image)}\n          style={imageStyle}\n          onLoad={() => setLoaded(true)}\n        />\n\n        {(!loaded || (lazy && !intersected)) && placeholder && (\n          <div className={classes.placeholder} title={alt}>\n            {placeholder}\n          </div>\n        )}\n\n        {props.children}\n      </View>\n    );\n  }\n);\n\nImage.displayName = \"@travelmakers-design/core/Image\";\n"],"names":["forwardRef","useStyles","useState","useRef","useImperativeHandle","useEffect","React","View"],"mappings":"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"}