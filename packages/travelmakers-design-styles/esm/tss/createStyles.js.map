{"version":3,"file":"createStyles.js","sources":["../../src/tss/createStyles.ts"],"sourcesContent":["import type { Co, TmTheme } from \"../theme\";\nimport { useTmTheme, useTmThemeStyles } from \"../theme/TmProvider\";\n\nimport type { CSSObject } from \"./types\";\nimport { fromEntries } from \"./utils/fromEntries\";\nimport { mergeClassNames } from \"./utils/mergeClassNames\";\nimport { useCss } from \"./useCss\";\n\nexport interface UseStylesOptions<Key extends string> {\n  co?: Co;\n  overrideStyles?:\n    | Partial<Record<Key, CSSObject>>\n    | ((theme: TmTheme) => Partial<Record<Key, CSSObject>>);\n  name: string;\n}\n\nexport function createStyles<Key extends string = string, Params = void>(\n  getCssObjectOrCssObject:\n    | ((\n        theme: TmTheme,\n        params: Params,\n        createRef: (refName: string) => string\n      ) => Record<Key, CSSObject>)\n    | Record<Key, CSSObject>\n) {\n  const getCssObject =\n    typeof getCssObjectOrCssObject === \"function\"\n      ? getCssObjectOrCssObject\n      : () => getCssObjectOrCssObject;\n\n  function useStyles(params: Params, options?: UseStylesOptions<Key>) {\n    const theme = useTmTheme();\n    const themeStyles = useTmThemeStyles()[options?.name];\n\n    const { css, cx } = useCss();\n\n    let count = 0;\n\n    function createRef(refName: string) {\n      count += 1;\n      return `tm-ref_${refName || \"\"}_${count}`;\n    }\n\n    const cssObject = getCssObject(theme, params, createRef);\n\n    const _overrideStyles =\n      typeof options?.overrideStyles === \"function\"\n        ? options?.overrideStyles(theme)\n        : options?.overrideStyles || {};\n    const _themeStyles =\n      typeof themeStyles === \"function\"\n        ? themeStyles(theme)\n        : themeStyles || {};\n    const _co =\n      typeof options?.co === \"function\" ? options.co(theme) : options?.co;\n\n    const classes = fromEntries(\n      Object.keys(cssObject).map((key) => {\n        const mergedStyles = cx(\n          css(cssObject[key]),\n          css(_themeStyles[key]),\n          css(_overrideStyles[key]),\n          css(_co)\n        );\n        return [key, mergedStyles];\n      })\n    ) as Record<Key, string>;\n\n    return { classes: mergeClassNames(cx, classes, options?.name), cx, theme };\n  }\n\n  return useStyles;\n}\n"],"names":[],"mappings":";;;;;AAIO,SAAS,YAAY,CAAC,uBAAuB,EAAE;AACtD,EAAE,MAAM,YAAY,GAAG,OAAO,uBAAuB,KAAK,UAAU,GAAG,uBAAuB,GAAG,MAAM,uBAAuB,CAAC;AAC/H,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE;AACtC,IAAI,MAAM,KAAK,GAAG,UAAU,EAAE,CAAC;AAC/B,IAAI,MAAM,WAAW,GAAG,gBAAgB,EAAE,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACpF,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,MAAM,EAAE,CAAC;AACjC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,SAAS,SAAS,CAAC,OAAO,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,CAAC;AACjB,MAAM,OAAO,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,IAAI,MAAM,eAAe,GAAG,QAAQ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,UAAU,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,cAAc,KAAK,EAAE,CAAC;AAC7N,IAAI,MAAM,YAAY,GAAG,OAAO,WAAW,KAAK,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,WAAW,IAAI,EAAE,CAAC;AACpG,IAAI,MAAM,GAAG,GAAG,QAAQ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;AAC1I,IAAI,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AACpE,MAAM,MAAM,YAAY,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChH,MAAM,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACjC,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;AACzG,GAAG;AACH,EAAE,OAAO,SAAS,CAAC;AACnB;;;;"}